name: Android CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    name: Build Android artifacts
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
      
      - name: "Setup Java 17"
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: "Set up Flutter"
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.7'
      
      - name: "Flutter version"
        run: |
          flutter --version
          java -version

      - name: "Ensure Android SDK (API 36)"
        run: |
          set -e
          SDKROOT="${ANDROID_SDK_ROOT:-/usr/local/lib/android/sdk}"
          SDKMANAGER="$SDKROOT/cmdline-tools/latest/bin/sdkmanager"
          if [ -x "$SDKMANAGER" ]; then
            yes | "$SDKMANAGER" --licenses || true
            yes | "$SDKMANAGER" "platforms;android-36" "build-tools;36.0.0" || true
          else
            echo "sdkmanager not found at $SDKMANAGER; skipping explicit Android SDK install"
          fi
      
      - name: "Install dependencies"
        run: flutter pub get

      - name: "Run analyzer (optional)"
        run: flutter analyze || true

      # --- This is the new step you added ---
      - name: "Create google-services.json"
        run: echo "${{ secrets.GOOGLE_SERVICES_JSON }}" > android/app/google-services.json

      - name: "Build Android APK (release)"
        run: flutter build apk --release

      - name: "Upload build artifacts"
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: |
            build/app/outputs/flutter-apk/*.apk

      - name: "Create GitHub Release"
        if: github.event_name == 'push'
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: release-${{ github.run_number }}
          release_name: "Automated build ${{ github.run_number }}"
          body: "Automated Android build from commit ${{ github.sha }}"
          draft: false
          prerelease: false

      - name: "Upload APK to Release"
        if: github.event_name == 'push'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/app/outputs/flutter-apk/app-release.apk
          asset_name: app-release.apk
          asset_content_type: application/vnd.android.package-archive

      # Note: Google Play publish step removed. Use Releases for internal distribution.
